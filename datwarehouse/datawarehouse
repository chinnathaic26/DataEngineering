
most important assets of any organization is its information.
in two forms: the operational systems of record and the data warehouse. 
This asset is almost always used for two purposes: operational record keeping and analytical decision making.
the operational systems are where the data is put in, and the data warehouse is where we get the data out.

The data warehouse must make an organization’s information easily accessible.
The data warehouse must present the organization’s information consistently.
The data warehouse must be adaptive and resilient to change. 
The data warehouse must be a secure bastion that protects our information assets. 
The data warehouse must serve as the foundation for improved decision making.
The business community must accept the data warehouse if it is to be deemed successful. 

4 main components of DWH:
operational source systems
Data Staging Area
Data Presentation Area
Data access tools

Extracting is the first step process in getting data into datawarehouse.
Tranforming
Loading data into datawarehouse

The key difference between 3NF and dimension models is the degree of normalization.
Data in the queryable presentation area of the data warehouse must be dimensional, must be atomic, and must adhere to the data warehouse bus architecture.

Metadata - data about data.
Operation Data Store - ODSs are frequently updated, somewhat integrated copies of operational data.
Fact Table - Numerical Performance measurements of buisness are stored.
A row in a fact table corresponds to a measurement. A measurement is a row in a
fact table. All the measurements in a fact table must be at the same grain. 

The most useful facts in a fact table are numeric and additive. 
The fact table itself generally has its own primary key made up of a subset of the foreign keys. This key is often called a composite or concatenated key.

A data warehouse almost always demands data expressed at the lowest possible
grain of each dimension not because queries want to see individual low-level rows,
but because queries need to cut through the details in very precise ways.

Data warehouses always need an explicit date dimension table. There are many
date attributes not supported by the SQL date function, including fiscal periods,
seasons, holidays, and weekends. Rather than attempting to determine these nonstandard calendar calculations in a query, we should look them up in a date dimension table.

Additive Fact
Semi Additive Fact 
Nonadditive Fact --- example Unit Price,ratio

Dimension tables are integral companions to a fact table. The dimension tables contain the textual context associated with a business process measurement event. They
describe the “who, what, where, when, how, and why” associated with the event.


Conformed Facts - If the same measurement appears in separate fact tables. 
Transaction fact tables, capture every individual transaction as it occurs, making them ideal for detailed, event-based analysis.
Periodic snapshot table :A row in a periodic snapshot fact table summarizes many measurement events occurring over a standard period, such as a day, a week, or a month. The grain is the
period, not the individual transaction. 
An accumulating snapshot fact table is used in a data warehouse to track the lifecycle of a business process where updates occur over time. Each row represents a specific entity or process instance and is updated as the process progresses through its lifecycle stages.
Example: Order Fulfillment Process
Factless fact tables are a special type of fact table in a data warehouse that do not have measurable numeric facts. Instead, they capture the occurrence of events or the existence of relationships.
Types of Factless Fact Tables
Event Tracking
Captures the occurrence of specific events. Student Attendance
Coverage
Captures relationships between dimensions without associated metrics. Product Promotion

An aggregate fact table is a type of fact table in a data warehouse that stores summarized or aggregated data, typically pre-calculated to improve query performance. 
These tables reduce the granularity of the data, consolidating multiple rows from a detailed fact table into fewer rows.

A degenerate dimension (DD) is a dimension in a data warehouse that does not have its own dimension table. Instead, its values are stored in the fact table itself. 

Transaction Tracking: Helps trace specific events or records without the need for additional joins.
Example Query: Retrieve all products sold in Transaction T12345.

A denormalized flattened dimension refers to a structure in data modeling or database design where hierarchical or normalized relationships in a dataset are "flattened" into a single table or dimension, eliminating joins and enabling faster querying for certain types of analysis.

In a normalized schema:

A Customer table might store customer details (name, region).
A Sales table might store transactions linked by a CustomerID.
In a flattened dimension:

These tables would be merged, and each row in the Sales table would include customer details, like:
SalesID	CustomerID	CustomerName	Region	SalesAmount
1	101	Alice	North	500
2	102	Bob	South	300

Null attributes in dimensions:
 Nulls in dimension attributes should be avoided because diff erent databases handle grouping and constraining on nulls inconsistently.

Role-playing dimensions:
In data warehousing, role-playing dimensions are dimensions that play multiple roles in a fact table. 
They refer to the same underlying table or data but are used multiple times within a schema to represent different perspectives or contexts. 
This is common in star schemas and snowflake schemas.

Junk Dimensions:
Junk dimensions are a data warehousing concept used to consolidate low-cardinality, miscellaneous attributes (such as flags, indicators, or status codes) that do not naturally fit into other dimensions. By combining these attributes into a single dimension, junk dimensions help reduce clutter in the schema and improve manageability.

Snowflaked Dimensions:
When a hierarchical relationship in a dimension table is normalized, low-cardinality attributes appear as secondary tables connected to the base dimension table by
an attribute key.

Outtrigger Dimensions:
A dimension can contain a reference to another dimension table. 
For instance, a bank account dimension can reference a separate dimension representing the date
the account was opened. These secondary dimension references are called outrigger
dimensions.

Conformed Dimensions:
Dimension tables conform when attributes in separate dimension tables have the
same column names and domain contents. Information from separate fact tables
can be combined in a single report by using conformed dimension attributes that
are associated with each fact table. 

Conformed dimensions:
Conformed dimensions are dimensions in a data warehouse that are shared across multiple fact tables or data marts, maintaining consistent meaning, structure, and values. 
They enable consistent reporting and analysis by providing a single version of the truth.

Shrunken dimensions are conformed dimensions that are a subset of rows and/or
columns of a base dimension.
When to Use Shrunken Dimensions
Aggregated Data Marts: When fact tables are aggregated to higher levels of granularity (e.g., time periods, locations).
Simplified Reporting Needs: When the business logic requires only a subset of attributes or members.
Optimizing Performance: For large-scale data warehouses where reducing dimensional data complexity can save time and resources.

SLowly changing dimensions:
Type 0: retain original
Type 1: overwrite
Type 2: Add new row
Type 3: Add new attribute
Type 4: Add mini dimension
Type 5: Add mini dimension and type 1 out trigger


Lag duration facts measure the time elapsed between two related events in a business process or workflow. 
These facts are commonly used in data warehouses to track delays, lead times, or the duration between specific events.







